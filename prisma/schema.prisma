// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id                Int       @id @default(autoincrement())
  email             String    @unique
  password          String
  role              String // admin, teacher, parent
  name              String
  type              String? // ayah, ibu, wali
  place_birth       String?
  date_time_birth   DateTime? @db.Date
  religion          String?
  education         String?
  job               String?
  address           String?
  phone             String?
  is_google         Boolean   @default(false)
  email_verified_at DateTime? @db.Date
  created_at        DateTime  @default(now())
  updated_at        DateTime?  @updatedAt

  children children[]
}

model children {
  id                Int       @id @default(autoincrement())
  full_name         String
  teacher_id        Int?
  nick_name         String?
  picture           String?
  gender            String
  place_birth       String?
  date_time_birth   DateTime? @db.Date
  religion          String?
  count_of_siblings Int?
  risk_category     String? // rendah, sedang, tinggi (enum)
  // Riwayat hasil tes pendengaran. soal no 2 MCHAT
  hearing_test      String? // pendengaran dalam batas normal, pendenganran di bawah normal, hasil tidak menyakinkan atau tidak definitif
  created_at        DateTime  @default(now())
  updated_at        DateTime?  @updatedAt

  parent                users[]
  child_recommendations child_recommendations[]
  birth_history         birth_history?
  expert_examination    expert_examination?
  health_status         health_status?
  child_assesments      child_assesment[]

  // monitor_child_recommendations monitor_child_recommendation[]
}

model birth_history {
  id                   Int      @id @default(autoincrement())
  child_id             Int      @unique
  healthy_pregnancy    String? // Ibu sehat selama mengandung? (ya/tidak)
  pregnancy_illness    String? // Ibu pernah sakit pada usia kandungan ... bulan
  gestation_details    String? // Lama Kandungan? contoh: Cukup bulan 38M, berat badan 37,5kg, Panjang 54cm
  birthplace           String? // Melahirkan di? (Rumah Sakit, Puskesmas, Bidan, Dukun, dll)
  birth_assistance     String? // Ditolong oleh? (Dokter, Bidan, Keluarga, dll)
  delivery_process     String? // Proses kelahiran? (Normal, Caesar, Vakum, dll)
  congenital_anomalies String? // Kelainan bawaan? (Tidak ada, Tuli, Buta, Bibir Sumbing, Juling, dll)
  first_food           String? // Makanan Pertama yang diberikan? (MPASI, dll)
  formula_milk         String? // Susu Formula mulai usia ... bulan, sampai dengan ... bulan
  immunization         String? // Imunisasi? (Lengkap, Tidak Lengkap, Tidak Sama Sekali)
  child                children @relation(fields: [child_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model expert_examination {
  id             Int      @id @default(autoincrement())
  child_id       Int      @unique
  pediatrician   String? // Dokter Anak
  rehabilitation String? // Dokter Rehabilitasi
  psychologist   String? // Psikolog
  therapist      String? // Terapis
  child          children @relation(fields: [child_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model health_status {
  id                   Int      @id @default(autoincrement())
  child_id             Int      @unique
  serious_illness      String? // Pernah Sakit Keras? (ya/tidak) berikan keterangan jika ya
  current_diseases     String? // Penyakit yang diderita? (jika ada)
  treatment_location   String? // Dirawat di? (Rumah Sakit, Puskesmas, Bidan, dll)
  treatment_duration   String? // Lama dirawat? (hari, minggu, bulan)
  general_comparison   String? // Dibandingkan dengan Saudara yang lain pada umumnya (sama/terlambat)
  crawling_development String? // Perkembangan Merangkak (Normal, Terlambat)
  sitting_development  String? // Perkembangan Duduk (Normal, Terlambat)
  walking_development  String? // Perkembangan Berjalan (Normal, Terlambat)
  first_words_age      String? // Mulai mengucapkan kata-kata pada usia ... tahun
  speaking_fluency_age String? // Lancar berbicara pada usia ... tahun
  bedwetting           String? // Mengompol ... (Tidak ada kelainan, Ada kelainan) Sebutkan Jika ada!
  child                children @relation(fields: [child_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

// birth history harusnya many to many?
model birth_history_question {
  id             Int     @id @default(autoincrement())
  type           String // sebelum kelahiran, saat kelahiran
  question       String
  image           String?
  example_answer String? // contoh jawaban
}

model health_status_question {
  id             Int     @id @default(autoincrement())
  type           String // keadaan kesehatan, perkembangan jasmani
  question       String // pernah sakit keras? dll
  image           String?
  example_answer String? // contoh jawaban
}

// hasil pemeriksaan ahli, expert examination harusnya many to many?
model expert_examination_question {
  id   Int    @id @default(autoincrement())
  type String // Dokter Ahli Anak, Dokter Ahli Rehabilitasi, Psikolog, Therapist
}

// rekomendasi
// ketika repetisi ada, maka durasi diubah menjadi jumlah hari
model recommendations {
  id               Int     @id @default(autoincrement())
  assesment_number Int?
  teacher_id       Int?
  is_main          Boolean @default(false)
  // type          String // standar, durasi, repetisi (Enum)
  // aspect            String @default()
  title            String
  aspect           String?
  description      String  @db.Text
  icon             String?
  frequency        String? // 2-3 kali sehari, 5-10 detik
  // duration        Int?
  // duration_type   String? // detik, menit, jam, hari, minggu, bulan
  // repetition      Int?
  // repetition_type String? // detik, menit, jam, hari, minggu, bulan
  risk_category    String? // rendah, sedang, tinggi (enum)

  // children             children               @relation(fields: [children_id], references: [id])
  // child_recommendations child_recommendations[]

  children child_recommendations[]
}

// tabel pivot rekomendasi dan anak
model child_recommendations {
  id                Int                            @id @default(autoincrement())
  children          children                       @relation(fields: [children_id], references: [id])
  children_id       Int
  recommendations   recommendations                @relation(fields: [recommendation_id], references: [id])
  recommendation_id Int
  monitors          monitor_child_recommendation[] // Add this line
}

model monitor_child_recommendation {
  id                      Int                   @id @default(autoincrement())
  // teacher_id              Int?
  name                    String?
  child_recommendation_id Int
  date_time               DateTime              @db.Date
  is_done                 Boolean               @default(false)
  with_whom               String? // Dengan siapa? (orang tua, guru)
  // teacher                 users?                @relation(fields: [teacher_id], references: [id])
  child_recommendations   child_recommendations @relation(fields: [child_recommendation_id], references: [id])
}

model assesments {
  id               Int     @id @default(autoincrement())
  assesment_number Int     @unique
  question         String  @db.Text
  picture          String?

  child_assesments child_assesment[]
}

model child_assesment {
  id             Int      @id @default(autoincrement())
  teacher_id     Int?
  assesment_type String   @default("awal") // awal, follow-up (enum)
  children_id    Int
  assesment_id   Int
  answer         String
  date_time      DateTime @db.Date

  children  children   @relation(fields: [children_id], references: [id])
  assesment assesments @relation(fields: [assesment_id], references: [id])
}

// model assesment {
//   id         Int    @id @default(autoincrement())
//   children_id Int
//   number     Int
//   question_type String // awal, follow-up (enum)
//   assesment_type String // awal, follow-up (enum)
//   question   String

//   children children @relation(fields: [children_id], references: [id])
// }
